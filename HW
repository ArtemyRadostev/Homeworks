yum install -y git
git config --global user.name “Artemy Radostev”
git config --global user.email atrad96@mail.ru

~~  git config --global --unset-all user.name < ресет юзернеймов

1.
  1. Create local repository named lection_git_hw
    
    git init lection_git_hw
      
      >> Initialized empty Git repository in /home/art/lection_git_hw/.git/
      
  2. Create file "homework" in this repo and commit it in master branch
  
      cd /home/art/lection_git_hw
      touch homework
      git add . ;Добавляет все файлы и директории в репозиторий.
      git commit -m "Test commit" -a #Ключ -a коммитит все файлы в директории. ~/git/testing $ git commit -m "Test commit" homework ;Указание конкретного файла.
    
  3. Create branch "hw_git" and insert anything in the file and commit these changes to this branch
  
      git branch hw_git
      git checkout hw_git
      echo *anything* > testfile
      git add testfile
      git commit -m "Anything commit" -a
  
  4. Switch back to master branch and add anything else to the empty file "homework" there too
  
      git checkout master
      echo funny yellow dog > homework
      git add homework
      git commit -m "This dog is so funny" homework
  
  5. Merge branch "hw_git" to "master", keep only changes from "hw_git" branch
  
      git merge hw_git # git merge master
  
  6. Switch to "hw_git" branch again and create new file "temp_file" and commit it
  
      git checkout hw_git
      touch temp_file
      git add temp_file
      git commit -m "temp_file commit" temp_file
  
  7. Revert to the first commit in "hw_git" branch
  
      git log #Выбираю самый первый коммит, выделяя его ID
      git revert 7cf6983c9fb1ea2f727ae40189c4097f50c06f10    
  
2.
  1. Register in Github (if you are not registered yet) and create empty repository "lection_git_hw"
  
      *Done*
  
  2. Set remote from your local repo from task 1 to this new repo (https://help.github.com/articles/changing-a-remote-s-url/)
  
      git remote add origin https://github.com/ArtemyRadostev/lection_git_hw.git
  
  3. Push all branches to the remote repo
  
      git push --all origin
  
  4. Change everything in file "homework" in branch "hw_git" to one line "Hello Github", commit it and push
  
      vi homework
      *меняю содержимое файла*
      git commit -m "Hello Github commit" homework
      git push --all origin
  
  5. Create Pull Request from branch "hw_git" to the master branch and assign me as reviewer to this merge request (https://github.com/SagurovA93)
  
      *Done*
  
3.
  1. Set up Gitlab CE in docker container (image "gitlab/gitlab-ce:latest", ports to publish – 80 and 22, you can choose any ports to be published on your machine)
  
      
  
  2. Log in as root (it will offer you to change password in gitlab webui on your first visit)
  Make screenshots on each step below, pack them as tgz archive and attach it to your homework
  3. Create group "hw_git"
  4. Create two users: maintainer and developer
  5. Add these users to the group and set them proper permissions in the group (maintainer – maintainer, developer – developer)
  6. Create new project with any name
  7. Create all branches for GitFlow in this project (you can create one feature and one release branch and don't create hotfix branch)
  8. Protect master branch to allow only maintainers to merge into it, and restrict all to push there
  9. Protect release branches by wildcard (release-* for example) and allow only maintainers to merge into it
  10. Protect develop branch to allow everyone to create Merge Request into it
  11. Allow anyone do anything in branches like "feature-*"
EXTRA (*)
  1. Add TravisCI to your Github repo from the first task
  2. Create .travis.yml, it should do only echo "Hello World"
  3. Trigger your CI on each commit to any branch
  4. Test it, make screenshot from TravisCI webui with success run
